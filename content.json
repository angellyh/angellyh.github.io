{"meta":{"title":"Liyinghao的博客","subtitle":"一只爱音乐偶尔有点小文艺的业余程序员","description":"一只爱音乐偶尔有点小文艺的业余程序员。目前主要使用python等进行各种爬虫、测试等开发，熟悉使用linux系统，掌握基本服务器知识。此为博客一枚。欢迎与我交朋友---扣扣：1216711554。","author":"Yinghao Li","url":"http://angellyh.coding.me"},"pages":[],"posts":[{"title":"机会的大门不能空手叩响，你需要手里端着东西给守门人看","slug":"公考加油","date":"2016-10-26T14:30:27.000Z","updated":"2016-10-26T15:49:44.384Z","comments":true,"path":"posts/[object Object]/2016-10-26-公考加油.html","link":"","permalink":"http://angellyh.coding.me/posts/[object Object]/2016-10-26-公考加油.html","excerpt":"你所羡慕的东西都是需要你有备而去的。当你足够渴望达成一个目标时，那就去做好自己能做的一切准备吧，老天会替你完成剩余的部分。","keywords":[],"text":"你所羡慕的东西都是需要你有备而去的。当你足够渴望达成一个目标时，那就去做好自己能做的一切准备吧，老天会替你完成剩余的部分。 突然想写这个文是因为在准备公考的过程偶有了些许感触，人生的道路上总会有着要自己独自拼搏努力的时候，在这过程中会有疲惫，会有迷茫，会有孤独，只有当你适应了这些并最终一直行走在路上，才会有机会得到你想要的东西。 以前总是看到有人问，是不是真的有那么一种人，生来能力出众？是不是真有这种人，可以把任何事做到最好，打小就是妈妈口中“别人家的孩子”？ 人通常都是这样，时常羡慕很多事情，这是本能，是好事，因为有目标才会有动力。但是很多时候，我们更愿意把别人的成功的原因归结为他的家境、天赋、运气、机遇种种，却从未想到过他为此做的准备。 记得很小时候学语文学过的一篇文章，叫“卖油翁”，市场上很多人看到卖油翁那仿佛演出一般的倒油技巧，都觉得是他的天赋，但其实不然，这只不过是唯手熟尔，多练了自然而然就会了。 拥有比别人得天独厚的优势固然重要，掌握比别人更好的机遇也必不可少。但更多时候，决定成败的还是我们在机遇来临前所做的准备。就像没有人会关心你在健身房流过的汗水，没有人听到你在跑步机上的哀嚎，没有人看到过你闭着眼吃素餐，他们只会在许久不见你后感叹你瘦了，然后让你传授运动的方法和减淝食谱。但你必须明白，自己所做的一切都不是徒劳，它们是一个胖子可以咸鱼翻身的全部资本，是如今你得到鲜花和掌声的前提。 一路的孤独、疲惫、落寞，是自己；别人看到的光鲜、阳光、暖心，也全部是自己。只是别人看到的是结果，而自己熟知的是其中的过程。我们都是张三李四一样的平凡人，一夜暴富、一夜爆红或者一夜成名这样的小概率事件，和我们相距甚远。我们能做的，不过是在机遇来临之前，做好自己该做的一切，准备好应该有的一切。 既然羡慕别人无忧的生活，我们就必须在此之前学会自律和规则。既然羡慕别人在职场嬉笑怒骂，我们就必须能力出众，让自己独一无二。 在这个世界上，如果你很想很想达成一个目标，你为之而足够渴望，并且做好一切准备时，老天会替你完成剩余的部分。你要做的就是，去一直前行，跨过挫折、疲惫、落寞和困难，一直走在路上，有备而来，从不停歇。就算在达成之前，你已经觉得无路可进了，到头来，机会还是会来。到达目的地的航线，常常不是我们凭空在地图上画出的路。恰恰在经过足够的渴望和迂回的努力路线中，我们最终会有所斩获。也许还有四个月，也许也还有半年甚至更久。我现在要做的也只有再继续做着自己能做的准备，然后去面对无硝烟的战场。机会的大门，不会空手叩响，你需要手里端着一些东西，在叩响大门时，给从门缝中窥视的守门人。 想赶上机会的列车，那最好离站台不太远。那就加油吧，晚安，世界。：）","categories":[],"tags":[{"name":"生活","slug":"life","permalink":"http://angellyh.coding.me/tags/life/"}]},{"title":"编程习惯","slug":"编程","date":"2016-10-09T03:35:52.000Z","updated":"2016-11-03T04:22:14.575Z","comments":true,"path":"posts/[object Object]/2016-10-09-编程.html","link":"","permalink":"http://angellyh.coding.me/posts/[object Object]/2016-10-09-编程.html","excerpt":"养成编程的一些好习惯会让你和别人都变舒服编程就像写文章，如果你乱写一通，那不仅你自己回来看的时候觉得很别扭，别人看你的东西也会觉得一头雾水，正所谓字如其人，字好看又条理清楚的文章让人觉得作者是个不错的人，同理写得好且好看的程序也会让人对程序员产生好感 以下内容来自知乎以及平时自己的编程经验","keywords":[],"text":"养成编程的一些好习惯会让你和别人都变舒服编程就像写文章，如果你乱写一通，那不仅你自己回来看的时候觉得很别扭，别人看你的东西也会觉得一头雾水，正所谓字如其人，字好看又条理清楚的文章让人觉得作者是个不错的人，同理写得好且好看的程序也会让人对程序员产生好感 以下内容来自知乎以及平时自己的编程经验 遇到不清楚或不懂的知识点，先去看官方文档！ 先！去！看！官方！！文档！！！！ 很多官方文档是英文的，硬着头皮也要看！看着看着就习惯了。 刚开始读英文文档会费时间和精力，但是等你回过头来再看，你会觉得这才是最恰当的选择。 首先你的英文水平得到提升（这是程序员无法回避的问题），耐性得到锻炼。 其次，什么叫官方文档？！两个字：权威！准确！当你发现网上有些库的介绍是似是而非，似懂非懂的答案的，甚至有的文章观点完全不一样，你就会懂我在说什么了。 当然，我并没有否认网上有好的答案和文章，我自己也经常看别人的博客。 只是，作为初学者，你的水平很难去辨别一些文章，观点的好坏对错，而这可能会对你理解一些知识带来致命的误导！ 不要过分纠结于“怎样把代码写得更短”或者“把代码写进一行”。 比如写这种是想怎样。。： 1print filter(lambda x: len(filter(lambda y: x % y == 0, xrange(2, int(sqrt(x) + 1)))) == 0, xrange(2, 100) 至少在同一个项目里，遵循统一的命名原则。 比如这种，顺手随便写的吧·····： 12345678class Test(object):...class ShuRuTest(Test):...class shuchu_ceshi(Test):... 如果有比较通用的广为接受的格式标准，请务必遵守。 比如python的pep8等诸如此类 代码较长时记得写好注释，整个项目写好文档。 几十行的小程序小脚本写个说明也好；几百几千行的不写注释维护起来太麻烦。最可恨是项目没文档，别说转手了，就自己过个小半年再来看都会想“这是什么鬼，怎么想不起来了”。 看看别人写的好的的源码是怎么写注释的，比如类的注释的格式和内容应该怎样 注释什么时候写？ 写代码之前写一部分，调试时候写一部分，写完代码之后补一部分。 写代码之前的：等于是你的提纲，也是后来人理解你代码的途径 调试时候的： //print tom.age 调试时候你打印的变量，可能是后来人改代码时的关键检查点，不要都删光，当然也不要太多，更不要不注释掉就那么留在代码里 写完功能后：对于不好理解的地方再补点注释，原则是后人改代码时候一眼就看清你的思路 顺便说一句，用英文写注释确实逼格很高，但是···对于英文不好的同学，就不要在注释里强秀英文了……过俩月就算有注释自己都看的吃力甚至看不懂了 尽量拆分函数功能及类，保证一个函数只做一件事，不要全堆一个函数里。 如果你一个函数写了几百行，一个函数六七重循环，那你真得想想该怎么改了 变量命名写清楚，不要p1,p2,p3这样的 保证代码的版本管理，每天结束工作 push remote,我用的是git。当然也可以用svn 考虑好异常处理，无论用if还是try。 务必看懂错误提示。编译器（解释器）及运行时给出的错误提示务必看懂。常见的也就那么些个单词，就那么几项概念，看明白就不用带个错误提示满世界找人问“为什么出现这个错误”···对于这种我想说请记记平时常见的计算机英语单词，然后打开浏览器google好不好···· 就说这么多，以后想到了再补：）","categories":[],"tags":[{"name":"编程","slug":"programming","permalink":"http://angellyh.coding.me/tags/programming/"},{"name":"随笔","slug":"other","permalink":"http://angellyh.coding.me/tags/other/"}]}]}